<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.stxkfzx.noshy.mapper.ChallengeMapper">
    <resultMap id="BaseResultMap" type="xin.stxkfzx.noshy.domain.Challenge">
        <id column="challenge_id" jdbcType="INTEGER" property="challengeId"/>
        <result column="challenge_name" jdbcType="VARCHAR" property="challengeName"/>
        <result column="challenge_description" jdbcType="VARCHAR" property="challengeDescription"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="browse_id" jdbcType="INTEGER" property="browseId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        challenge_id, challenge_name, challenge_description, status, create_time, browse_id,
        user_id,
image_url
</sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge
        where challenge_id = #{challengeId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from challenge
        where challenge_id = #{challengeId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="challenge_id" keyProperty="challengeId"
            parameterType="xin.stxkfzx.noshy.domain.Challenge" useGeneratedKeys="true">
        INSERT INTO challenge (
            challenge_id,
            challenge_name,
            challenge_description,
            status,
            create_time,
            browse_id,
            user_id,
            image_url
        ) VALUES (
            #{challengeId,jdbcType=INTEGER},
            #{challengeName,jdbcType=VARCHAR},
            #{challengeDescription,jdbcType=VARCHAR},
            #{status,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{browseId,jdbcType=INTEGER},
            #{userId,jdbcType=INTEGER},
            #{imageUrl,jdbcType=VARCHAR}
        )
</insert>
    <insert id="insertSelective" keyColumn="challenge_id" keyProperty="challengeId"
            parameterType="xin.stxkfzx.noshy.domain.Challenge" useGeneratedKeys="true">
        INSERT INTO challenge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="challengeId!=null"> challenge_id,</if>
            <if test="challengeName!=null"> challenge_name,</if>
            <if test="challengeDescription!=null"> challenge_description,</if>
            <if test="status!=null"> status,</if>
            <if test="createTime!=null"> create_time,</if>
            <if test="browseId!=null"> browse_id,</if>
            <if test="userId!=null"> user_id,</if>
            <if test="imageUrl!=null"> image_url</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="challengeId!=null"> #{challengeId,jdbcType=INTEGER},</if>
            <if test="challengeName!=null"> #{challengeName,jdbcType=VARCHAR},</if>
            <if test="challengeDescription!=null"> #{challengeDescription,jdbcType=VARCHAR},</if>
            <if test="status!=null"> #{status,jdbcType=INTEGER},</if>
            <if test="createTime!=null"> #{createTime,jdbcType=TIMESTAMP},</if>
            <if test="browseId!=null"> #{browseId,jdbcType=INTEGER},</if>
            <if test="userId!=null"> #{userId,jdbcType=INTEGER},</if>
            <if test="imageUrl!=null"> #{imageUrl,jdbcType=VARCHAR}</if>
        </trim>
</insert>
    <update id="updateByPrimaryKeySelective" parameterType="xin.stxkfzx.noshy.domain.Challenge">
        UPDATE challenge
        <set>
                <if test="challengeId != null"> challenge_id = #{challengeId,jdbcType=INTEGER},</if>
                <if test="challengeName != null"> challenge_name = #{challengeName,jdbcType=VARCHAR},</if>
                <if test="challengeDescription != null"> challenge_description = #{challengeDescription,jdbcType=VARCHAR},</if>
                <if test="status != null"> status = #{status,jdbcType=INTEGER},</if>
                <if test="createTime != null"> create_time = #{createTime,jdbcType=TIMESTAMP},</if>
                <if test="browseId != null"> browse_id = #{browseId,jdbcType=INTEGER},</if>
                <if test="userId != null"> user_id = #{userId,jdbcType=INTEGER},</if>
                <if test="imageUrl != null"> image_url = #{imageUrl,jdbcType=VARCHAR}</if>
        </set>
		where challenge_id = #{challengeId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="xin.stxkfzx.noshy.domain.Challenge">
        UPDATE challenge
        set
                challenge_id = #{challengeId,jdbcType=INTEGER},
                challenge_name = #{challengeName,jdbcType=VARCHAR},
                challenge_description = #{challengeDescription,jdbcType=VARCHAR},
                status = #{status,jdbcType=INTEGER},
                create_time = #{createTime,jdbcType=TIMESTAMP},
                browse_id = #{browseId,jdbcType=INTEGER},
                user_id = #{userId,jdbcType=INTEGER},
                image_url = #{imageUrl,jdbcType=VARCHAR}
		where challenge_id = #{challengeId,jdbcType=INTEGER}
    </update>

    <!--auto generated by codehelper on 2018-09-20-->
    <select id="find" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from challenge
        limit #{rowIndex}, #{pageSize}
    </select>

    <!--auto generated by codehelper on 2018-09-20-->
    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from challenge</select>


    <select id="findOwnerVideoId" resultType="java.lang.String">
        select video_id
        from challenge_video_relation
        where challenge_id = #{challengeId} and video_id in (select video_id
                                                             from video
                                                             where user_id = #{userId})
        order by create_time asc
        limit 0, 1
    </select>
</mapper>