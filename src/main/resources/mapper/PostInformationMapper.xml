<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xin.stxkfzx.noshy.mapper.PostInformationMapper">
  <resultMap id="BaseResultMap" type="xin.stxkfzx.noshy.domain.PostInformation">
    <id column="info_id" jdbcType="INTEGER" property="infoId" />
    <result column="info_content" jdbcType="VARCHAR" property="infoContent" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="post_id" jdbcType="INTEGER" property="postId" />
  </resultMap>
  <sql id="Base_Column_List">
    ${alias}.info_id, ${alias}.info_content, ${alias}.user_id, ${alias}.create_time, ${alias}.image_url, ${alias}.post_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List">
      <property name="alias" value="pi"/>
    </include>
    from post_information pi
    where info_id = #{infoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post_information
    where info_id = #{infoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="info_id" keyProperty="infoId" parameterType="xin.stxkfzx.noshy.domain.PostInformation" useGeneratedKeys="true">
    insert into post_information (info_content, user_id, create_time, 
      image_url, post_id)
    values (#{infoContent,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{imageUrl,jdbcType=VARCHAR}, #{postId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="info_id" keyProperty="infoId" parameterType="xin.stxkfzx.noshy.domain.PostInformation" useGeneratedKeys="true">
    insert into post_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoContent != null">
        info_content,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="postId != null">
        post_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoContent != null">
        #{infoContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xin.stxkfzx.noshy.domain.PostInformation">
    update post_information
    <set>
      <if test="infoContent != null">
        info_content = #{infoContent,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=INTEGER},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xin.stxkfzx.noshy.domain.PostInformation">
    update post_information
    set info_content = #{infoContent,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=INTEGER}
    where info_id = #{infoId,jdbcType=INTEGER}
  </update>

  <select id="selectPostInformationListDESCCreateTime" resultMap="BaseResultMap">
    select user_name,
    <include refid="Base_Column_List">
      <property name="alias" value="temp"/>
    </include>
    from
    (select
    <include refid="Base_Column_List">
      <property name="alias" value="pi"/>
    </include>
    from post_information pi
    where post_id = #{postId}
    <if test="infoId != null">
      and pi.create_time &lt;= (select pi2.create_time from post_information pi2 where pi2.info_id = #{infoId} )
    </if>
    order by pi.create_time DESC
    limit
    <if test="rowIndex == null">
      0,
    </if>
    <if test="rowIndex != null">
      #{rowIndex},
    </if>
    #{pageSize}) temp, user
    where user.user_id = temp.user_id
    ORDER BY temp.create_time ASC
  </select>

  <delete id="deleteByPostId" parameterType="int">
    delete from post_information
    where post_id = #{postId};
  </delete>

  <select id="selectPostInformationList" resultMap="BaseResultMap">
    select user_name,
    <include refid="Base_Column_List">
      <property name="alias" value="pi"/>
    </include>
    from post_information pi, user
    where post_id = #{postId} and user.user_id = pi.user_id
    limit #{rowIndex}, #{pageSize}
  </select>
  <select id="countByPostId" resultType="int" parameterType="int">
    select COUNT(info_id)
    from post_information
    where post_id = ${postId}
  </select>
</mapper>